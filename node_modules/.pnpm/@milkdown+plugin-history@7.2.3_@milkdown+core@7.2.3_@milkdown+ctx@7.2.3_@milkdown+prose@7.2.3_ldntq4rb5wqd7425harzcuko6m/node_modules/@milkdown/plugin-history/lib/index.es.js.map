{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport type { Meta, MilkdownPlugin } from '@milkdown/ctx'\nimport { commandsCtx } from '@milkdown/core'\nimport { history as prosemirrorHistory, redo, undo } from '@milkdown/prose/history'\nimport { $command, $ctx, $prose, $useKeymap } from '@milkdown/utils'\n\nconst withMeta = <T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>,\n): T => {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-history',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n\n/// The milkdown command wrapper of [undo API](https://prosemirror.net/docs/ref/#history.undo) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const undoCommand = $command('Undo', () => () => undo)\n\nwithMeta(undoCommand, {\n  displayName: 'Command<undo>',\n})\n\n/// The milkdown command wrapper of [redo API](https://prosemirror.net/docs/ref/#history.redo) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const redoCommand = $command('Undo', () => () => redo)\n\nwithMeta(undoCommand, {\n  displayName: 'Command<redo>',\n})\n\n/// The [config](https://prosemirror.net/docs/ref/#history.history%5Econfig) of prosemirror history plugin.\nexport const historyProviderConfig = $ctx<{ depth?: number; newGroupDelay?: number }, 'historyProviderConfig'>({}, 'historyProviderConfig')\n\nwithMeta(historyProviderConfig, {\n  displayName: 'Ctx<historyProviderConfig>',\n})\n\n/// The milkdown wrapper of [history API](https://prosemirror.net/docs/ref/#history.history) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const historyProviderPlugin = $prose(ctx => prosemirrorHistory(ctx.get(historyProviderConfig.key)))\n\nwithMeta(historyProviderPlugin, {\n  displayName: 'Ctx<historyProviderPlugin>',\n})\n\n/// The keymap of history plugin, it's `mod-z` for undo and `mod-y`/`shift-mod-z` for redo.\nexport const historyKeymap = $useKeymap('historyKeymap', {\n  Undo: {\n    shortcuts: 'Mod-z',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(undoCommand.key)\n    },\n  },\n  Redo: {\n    shortcuts: ['Mod-y', 'Shift-Mod-z'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(redoCommand.key)\n    },\n  },\n})\n\nwithMeta(historyKeymap.ctx, {\n  displayName: 'KeymapCtx<history>',\n})\nwithMeta(historyKeymap.shortcuts, {\n  displayName: 'Keymap<history>',\n})\n\n/// The milkdown history plugin.\nexport const history: MilkdownPlugin[] = [historyProviderConfig, historyProviderPlugin, historyKeymap, undoCommand, redoCommand].flat()\n"],"names":["withMeta","plugin","meta","undoCommand","$command","undo","redoCommand","redo","historyProviderConfig","$ctx","historyProviderPlugin","$prose","ctx","prosemirrorHistory","historyKeymap","$useKeymap","commands","commandsCtx","history"],"mappings":";;;AAMA,MAAMA,IAAW,CACfC,GACAC,OAEA,OAAO,OAAOD,GAAQ;AAAA,EACpB,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,GAAGC;AAAA,EACL;AAAA,CACD,GAEMD,IAIIE,IAAcC,EAAS,QAAQ,MAAM,MAAMC,CAAI;AAE5DL,EAASG,GAAa;AAAA,EACpB,aAAa;AACf,CAAC;AAGM,MAAMG,IAAcF,EAAS,QAAQ,MAAM,MAAMG,CAAI;AAE5DP,EAASG,GAAa;AAAA,EACpB,aAAa;AACf,CAAC;AAGM,MAAMK,IAAwBC,EAA0E,CAAC,GAAG,uBAAuB;AAE1IT,EAASQ,GAAuB;AAAA,EAC9B,aAAa;AACf,CAAC;AAGY,MAAAE,IAAwBC,EAAO,CAAOC,MAAAC,EAAmBD,EAAI,IAAIJ,EAAsB,GAAG,CAAC,CAAC;AAEzGR,EAASU,GAAuB;AAAA,EAC9B,aAAa;AACf,CAAC;AAGY,MAAAI,IAAgBC,EAAW,iBAAiB;AAAA,EACvD,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS,CAACH,MAAQ;AACV,YAAAI,IAAWJ,EAAI,IAAIK,CAAW;AACpC,aAAO,MAAMD,EAAS,KAAKb,EAAY,GAAG;AAAA,IAC5C;AAAA,EACF;AAAA,EACA,MAAM;AAAA,IACJ,WAAW,CAAC,SAAS,aAAa;AAAA,IAClC,SAAS,CAACS,MAAQ;AACV,YAAAI,IAAWJ,EAAI,IAAIK,CAAW;AACpC,aAAO,MAAMD,EAAS,KAAKV,EAAY,GAAG;AAAA,IAC5C;AAAA,EACF;AACF,CAAC;AAEDN,EAASc,EAAc,KAAK;AAAA,EAC1B,aAAa;AACf,CAAC;AACDd,EAASc,EAAc,WAAW;AAAA,EAChC,aAAa;AACf,CAAC;AAGY,MAAAI,IAA4B,CAACV,GAAuBE,GAAuBI,GAAeX,GAAaG,CAAW,EAAE,KAAK;"}