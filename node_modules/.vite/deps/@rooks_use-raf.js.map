{
  "version": 3,
  "sources": ["../../.pnpm/performance-now@2.1.0/node_modules/performance-now/lib/src/performance-now.coffee", "../../.pnpm/raf@3.4.1/node_modules/raf/index.js", "../../.pnpm/@rooks+use-raf@4.11.2/node_modules/@rooks/use-raf/lib/index.esm.js"],
  "sourcesContent": [null, "var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n", "import { useRef, useEffect } from 'react';\nimport raf from 'raf';\n\n/**\r\n *\r\n * useRaf\r\n * Uses a polyfilled version of requestAnimationFrame\r\n * @param {function} callback The callback function to be executed\r\n * @param {boolean} [isActive=true] The value which while true, keeps the raf running infinitely\r\n */\r\nfunction useRaf(callback, isActive) {\r\n    const savedCallback = useRef();\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n    useEffect(() => {\r\n        let startTime, animationFrame;\r\n        function tick() {\r\n            const timeElapsed = Date.now() - startTime;\r\n            startTime = Date.now();\r\n            loop();\r\n            savedCallback.current && savedCallback.current(timeElapsed);\r\n        }\r\n        function loop() {\r\n            animationFrame = raf(tick);\r\n        }\r\n        if (isActive) {\r\n            startTime = Date.now();\r\n            loop();\r\n            return () => {\r\n                raf.cancel(animationFrame);\r\n            };\r\n        }\r\n    }, [isActive]);\r\n}\n\nexport default useRaf;\n//# sourceMappingURL=index.esm.js.map\n"],
  "mappings": "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",
  "names": ["raf", "i", "raf"]
}
