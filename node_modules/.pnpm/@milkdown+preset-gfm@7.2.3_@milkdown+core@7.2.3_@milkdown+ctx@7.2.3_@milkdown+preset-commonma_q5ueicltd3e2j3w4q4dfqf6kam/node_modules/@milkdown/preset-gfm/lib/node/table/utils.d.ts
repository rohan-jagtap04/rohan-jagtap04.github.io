import type { ContentNodeWithPos } from '@milkdown/prose';
import type { Node } from '@milkdown/prose/model';
import type { Selection, Transaction } from '@milkdown/prose/state';
import type { TableRect } from '@milkdown/prose/tables';
export interface CellPos {
    pos: number;
    start: number;
    node: Node;
}
export declare const createTable: (rowsCount?: number, colsCount?: number) => Node;
export declare const findTable: (selection: Selection) => ContentNodeWithPos | undefined;
export declare const getCellsInCol: (columnIndex: number, selection: Selection) => CellPos[] | undefined;
export declare const getCellsInRow: (rowIndex: number, selection: Selection) => CellPos[] | undefined;
export declare const getAllCellsInTable: (selection: Selection) => {
    pos: number;
    start: number;
    node: Node | null;
}[] | undefined;
export declare const selectTable: (tr: Transaction) => Transaction;
export declare function addRowWithAlignment(tr: Transaction, { map, tableStart, table }: TableRect, row: number): Transaction;
export declare const selectLine: (type: 'row' | 'col') => (index: number) => (tr: Transaction) => Transaction;
export declare const selectRow: (index: number) => (tr: Transaction) => Transaction;
export declare const selectCol: (index: number) => (tr: Transaction) => Transaction;
export declare function moveCol(tr: Transaction, origin: number, target: number, select?: boolean): Transaction;
export declare function moveRow(tr: Transaction, origin: number, target: number, select?: boolean): Transaction;
//# sourceMappingURL=utils.d.ts.map